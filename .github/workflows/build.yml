name: Build and Package fpdb-3, pypoker-eval, and poker-eval

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
          git submodule update --init --recursive
          pip install -r fpdb-3/requirements.txt


      - name: Rendre le script exécutable
        run: chmod +x ./build.sh
        shell: bash

      - name: Build fpdb-3
        run: bash ./build.sh
        shell: bash

      - name: copy
        run: |
          cp fpdb-3/HUD_config.xml fpdb-3/dist/HUD_config.xml
          cp fpdb-3/logging.conf fpdb-3/dist/logging.conf
          cp install.sh fpdb-3/dist/install.sh

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts-windows
          path: fpdb-3/dist/*

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake
          sudo apt-get install -y libxcb1 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-shape0 libxcb-xinerama0 libxkbcommon-x11-0 libxcb-xfixes0 fuse libfuse2
          sudo modprobe fuse
          sudo groupadd fuse
          sudo usermod -a -G fuse $USER
          git submodule update --init --recursive
          python -m pip install --upgrade pip setuptools wheel
          pip install -r fpdb-3/requirements-linux.txt


      - name: Rendre le script exécutable
        run: chmod +x ./build.sh
        shell: bash
      - name: Rendre le script exécutable
        run: chmod +x ./build_fpdb-linux.sh
        shell: bash

      - name: Build fpdb-3
        run: bash ./build.sh


      - name: copy
        run: |
          cp fpdb-3/HUD_config.xml fpdb-3/dist/HUD_config.xml
          cp fpdb-3/logging.conf fpdb-3/dist/logging.conf
          cp install.sh fpdb-3/dist/install.sh     

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts-linux
          path: fpdb-3/dist/*


  build-macos-arm:
    runs-on: macos-14
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          brew install cmake
          pip install -r fpdb-3/requirements_macos.txt
      - name: Debug Python environment
        run: |
          which python3
          python3 --version
          echo "PYTHON_PATH: $pythonLocation/bin/python3"
          echo "PYTHON_INCLUDE_DIR: $pythonLocation/include/python3.11"
          echo "PYTHON_LIBRARY: $pythonLocation/lib/libpython3.11.dylib"
          ls -l $pythonLocation/bin
          ls -l $pythonLocation/include
          ls -l $pythonLocation/lib
          cmake --version
      - name: Build poker-eval
        run: |
          cd fpdb-3/pypoker-eval/poker-eval
          mkdir -p build && cd build
          cmake ..
          make
          cd ../../..
      - name: Build pypoker-eval
        run: |
          cd fpdb-3/pypoker-eval
          mkdir -p build && cd build
          cmake -DPython3_EXECUTABLE=$pythonLocation/bin/python3 \
                -DPython3_INCLUDE_DIR=$pythonLocation/include/python3.11 \
                -DPython3_LIBRARY=$pythonLocation/lib/libpython3.11.dylib \
                ..
          make VERBOSE=1
          echo "Contents of build directory:"
          ls -R
          cd ../..
      - name: Copy pypokereval.so
        run: |
          find fpdb-3/pypoker-eval/build -name "pypokereval*.so" -exec cp {} fpdb-3/pypoker-eval/_pokereval_3_11.so \;
      - name: Verify copy
        run: |
          ls -l fpdb-3/pypoker-eval/_pokereval_3_11.so
          cp fpdb-3/pypoker-eval/_pokereval_3_11.so fpdb-3/_pokereval_3_11.so
          cp fpdb-3/pypoker-eval/pokereval.py fpdb-3/pokereval.py
      - name: Rendre le script exécutable
        run: chmod +x ./build_fpdb-osx.sh
        shell: bash
      - name: Build fpdb-3
        run: |
          ./build_fpdb-osx.sh


      - name: copy
        run: |
          cp fpdb-3/HUD_config.xml fpdb-3/dist/HUD_config.xml
          cp fpdb-3/logging.conf fpdb-3/dist/logging.conf
          cp install.sh fpdb-3/dist/install.sh          

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts-macos-arm
          path: fpdb-3/dist/*


  build-macos:
    runs-on: macos-14-large
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          brew install cmake
          pip install -r fpdb-3/requirements_macos.txt

      - name: Debug Python environment
        run: |
          which python3
          python3 --version
          echo "PYTHON_PATH: $pythonLocation/bin/python3"
          echo "PYTHON_INCLUDE_DIR: $pythonLocation/include/python3.11"
          echo "PYTHON_LIBRARY: $pythonLocation/lib/libpython3.11.dylib"
          ls -l $pythonLocation/bin
          ls -l $pythonLocation/include
          ls -l $pythonLocation/lib
          cmake --version

      - name: Build poker-eval
        run: |
          cd fpdb-3/pypoker-eval/poker-eval
          mkdir -p build && cd build
          cmake ..
          make
          cd ../../..

      - name: Build pypoker-eval
        run: |
          cd fpdb-3/pypoker-eval
          mkdir -p build && cd build
          cmake -DPython3_EXECUTABLE=$pythonLocation/bin/python3 \
                -DPython3_INCLUDE_DIR=$pythonLocation/include/python3.11 \
                -DPython3_LIBRARY=$pythonLocation/lib/libpython3.11.dylib \
                ..
          make VERBOSE=1
          echo "Contents of build directory:"
          ls -R
          cd ../..
      
      - name: Copy pypokereval.so
        run: |
          find fpdb-3/pypoker-eval/build -name "pypokereval*.so" -exec cp {} fpdb-3/pypoker-eval/_pokereval_3_11.so \;
      
      - name: Verify copy
        run: |
          ls -l fpdb-3/pypoker-eval/_pokereval_3_11.so
          cp fpdb-3/pypoker-eval/_pokereval_3_11.so fpdb-3/_pokereval_3_11.so
          cp fpdb-3/pypoker-eval/pokereval.py fpdb-3/pokereval.py

      - name: Rendre le script exécutable
        run: chmod +x ./build_fpdb-osx.sh
        shell: bash

      - name: Build fpdb-3
        run: |
          ./build_fpdb-osx.sh


      - name: copy
        run: |
          cp fpdb-3/HUD_config.xml fpdb-3/dist/HUD_config.xml
          cp fpdb-3/logging.conf fpdb-3/dist/logging.conf
          cp install.sh fpdb-3/dist/install.sh      
              
      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts-macos
          path: fpdb-3/dist/*

  create-release:
    needs: [build-windows, build-linux, build-macos-arm, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for asset in build-artifacts-*/fpdb-3*; do
            asset_name=$(basename "$asset")
            echo "Uploading $asset_name"
            curl -H "Authorization: token $GITHUB_TOKEN" \
                  -H "Content-Type: application/octet-stream" \
                  --data-binary @"$asset" \
                  "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=$asset_name"
          done